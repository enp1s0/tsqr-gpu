CXX=g++
CXXFLAGS=-std=c++14 -I./src/cutf -I./src/wmma-extension -O3
OMPFLAGS=-fopenmp
NVCC=nvcc
NVCCFLAGS=$(CXXFLAGS) --compiler-bindir=$(CXX) -Xcompiler=$(OMPFLAGS) -gencode arch=compute_70,code=sm_70 -gencode arch=compute_75,code=sm_75 -lcublas -lcusolver -rdc=true
SRCDIR=src
OBJDIR=objs
LIBDIR=lib
HEADERS=$(shell find $(SRCDIR) -name '*.cuh' -o -name '*.hpp' -o -name '*.h')
TARGET=libtcqr
SL_OBJS=$(OBJDIR)/tsqr.o $(OBJDIR)/tcqr32x16.o $(OBJDIR)/blockqr.o $(OBJDIR)/tsqr.dlink.o $(OBJDIR)/tcqr32x16.dlink.o $(OBJDIR)/blockqr.dlink.o
INCLUDE_DIR=include
COPY_HF=$(SRCDIR)/tsqr.hpp $(SRCDIR)/tcqr.hpp $(SRCDIR)/blockqr.hpp

$(LIBDIR)/$(TARGET).a: $(SL_OBJS)
	[ -d $(LIBDIR) ] || mkdir $(LIBDIR)
	$(NVCC) -o $@ $+ $(NVCCFLAGS) -lib -m64 
	[ -d $(INCLUDE_DIR) ] || mkdir -p $(INCLUDE_DIR)
	cp $(COPY_HF) $(INCLUDE_DIR)

$(OBJDIR)/%.o: $(SRCDIR)/%.cu $(HEADERS)
	[ -d $(OBJDIR) ] || mkdir $(OBJDIR)
	$(NVCC) -o $@ -c $< $(NVCCFLAGS) -dc -m64

$(OBJDIR)/%.dlink.o: $(OBJDIR)/%.o
	$(NVCC) -dlink -o $@ $< $(NVCCFLAGS) -m64

clean:
	rm -rf $(OBJDIR)
	rm -rf $(LIBDIR)
